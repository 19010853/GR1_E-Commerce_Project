{"ast":null,"code":"import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\nimport api from \"../../api/api\";\nexport const add_banner = createAsyncThunk(\"banner/add_banner\", async (info, {\n  rejectWithValue,\n  fulfillWithValue\n}) => {\n  try {\n    const {\n      data\n    } = await api.post(`/banner/add`, info, {\n      withCredentials: true\n    });\n    return fulfillWithValue(data);\n  } catch (error) {\n    return rejectWithValue(error.response.data);\n  }\n});\n// End Method\n\nexport const get_banner = createAsyncThunk(\"banner/get_banner\", async (productId, {\n  rejectWithValue,\n  fulfillWithValue\n}) => {\n  try {\n    const {\n      data\n    } = await api.get(`/banner/get/${productId}`, {\n      withCredentials: true\n    });\n    return fulfillWithValue(data);\n  } catch (error) {\n    return rejectWithValue(error.response.data);\n  }\n});\n// End Method\n\nexport const update_banner = createAsyncThunk(\"banner/update_banner\", async ({\n  bannerId,\n  info\n}, {\n  rejectWithValue,\n  fulfillWithValue\n}) => {\n  try {\n    const {\n      data\n    } = await api.put(`/banner/update/${bannerId}`, info, {\n      withCredentials: true\n    });\n    return fulfillWithValue(data);\n  } catch (error) {\n    return rejectWithValue(error.response.data);\n  }\n});\n// End Method\n\nexport const bannerReducer = createSlice({\n  name: \"banner\",\n  initialState: {\n    successMessage: \"\",\n    errorMessage: \"\",\n    loader: false,\n    banners: [],\n    banner: \"\"\n  },\n  reducers: {\n    messageClear: (state, _) => {\n      state.successMessage = \"\";\n      state.errorMessage = \"\";\n    }\n  },\n  extraReducers: builder => {\n    builder.addCase(add_banner.pending, (state, {\n      payload\n    }) => {\n      state.loader = true;\n    }).addCase(add_banner.rejected, (state, {\n      payload\n    }) => {\n      state.loader = false;\n      state.errorMessage = payload.error;\n    }).addCase(add_banner.fulfilled, (state, {\n      payload\n    }) => {\n      state.loader = false;\n      state.successMessage = payload.message;\n      state.banner = payload.banner;\n    }).addCase(get_banner.fulfilled, (state, {\n      payload\n    }) => {\n      state.banner = payload.banner;\n    }).addCase(update_banner.pending, (state, {\n      payload\n    }) => {\n      state.loader = true;\n    }).addCase(update_banner.rejected, (state, {\n      payload\n    }) => {\n      state.loader = false;\n      state.errorMessage = payload.error;\n    }).addCase(update_banner.fulfilled, (state, {\n      payload\n    }) => {\n      state.loader = false;\n      state.successMessage = payload.message;\n      state.banner = payload.banner;\n    });\n  }\n});\nexport const {\n  messageClear\n} = bannerReducer.actions;\nexport default bannerReducer.reducer;","map":{"version":3,"names":["createAsyncThunk","createSlice","api","add_banner","info","rejectWithValue","fulfillWithValue","data","post","withCredentials","error","response","get_banner","productId","get","update_banner","bannerId","put","bannerReducer","name","initialState","successMessage","errorMessage","loader","banners","banner","reducers","messageClear","state","_","extraReducers","builder","addCase","pending","payload","rejected","fulfilled","message","actions","reducer"],"sources":["C:/Users/Admin/GR1_E-Commerce_Project/dashboard-frontend/src/store/Reducers/bannerReducer.js"],"sourcesContent":["import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\r\nimport api from \"../../api/api\";\r\n\r\nexport const add_banner = createAsyncThunk(\r\n  \"banner/add_banner\",\r\n  async (info, { rejectWithValue, fulfillWithValue }) => {\r\n    try {\r\n      const { data } = await api.post(`/banner/add`, info, {\r\n        withCredentials: true,\r\n      });\r\n      return fulfillWithValue(data);\r\n    } catch (error) {\r\n      return rejectWithValue(error.response.data);\r\n    }\r\n  }\r\n);\r\n// End Method\r\n\r\nexport const get_banner = createAsyncThunk(\r\n  \"banner/get_banner\",\r\n  async (productId, { rejectWithValue, fulfillWithValue }) => {\r\n    try {\r\n      const { data } = await api.get(`/banner/get/${productId}`, {\r\n        withCredentials: true,\r\n      });\r\n      return fulfillWithValue(data);\r\n    } catch (error) {\r\n      return rejectWithValue(error.response.data);\r\n    }\r\n  }\r\n);\r\n// End Method\r\n\r\nexport const update_banner = createAsyncThunk(\r\n  \"banner/update_banner\",\r\n  async ({ bannerId, info }, { rejectWithValue, fulfillWithValue }) => {\r\n    try {\r\n      const { data } = await api.put(`/banner/update/${bannerId}`, info, {\r\n        withCredentials: true,\r\n      });\r\n      return fulfillWithValue(data);\r\n    } catch (error) {\r\n      return rejectWithValue(error.response.data);\r\n    }\r\n  }\r\n);\r\n// End Method\r\n\r\nexport const bannerReducer = createSlice({\r\n  name: \"banner\",\r\n  initialState: {\r\n    successMessage: \"\",\r\n    errorMessage: \"\",\r\n    loader: false,\r\n    banners: [],\r\n    banner: \"\",\r\n  },\r\n  reducers: {\r\n    messageClear: (state, _) => {\r\n      state.successMessage = \"\";\r\n      state.errorMessage = \"\";\r\n    },\r\n  },\r\n  extraReducers: (builder) => {\r\n    builder\r\n      .addCase(add_banner.pending, (state, { payload }) => {\r\n        state.loader = true;\r\n      })\r\n      .addCase(add_banner.rejected, (state, { payload }) => {\r\n        state.loader = false;\r\n        state.errorMessage = payload.error;\r\n      })\r\n      .addCase(add_banner.fulfilled, (state, { payload }) => {\r\n        state.loader = false;\r\n        state.successMessage = payload.message;\r\n        state.banner = payload.banner;\r\n      })\r\n      .addCase(get_banner.fulfilled, (state, { payload }) => {\r\n        state.banner = payload.banner;\r\n      })\r\n      .addCase(update_banner.pending, (state, { payload }) => {\r\n        state.loader = true;\r\n      })\r\n      .addCase(update_banner.rejected, (state, { payload }) => {\r\n        state.loader = false;\r\n        state.errorMessage = payload.error;\r\n      })\r\n      .addCase(update_banner.fulfilled, (state, { payload }) => {\r\n        state.loader = false;\r\n        state.successMessage = payload.message;\r\n        state.banner = payload.banner;\r\n      });\r\n  },\r\n});\r\nexport const { messageClear } = bannerReducer.actions;\r\nexport default bannerReducer.reducer;\r\n"],"mappings":"AAAA,SAASA,gBAAgB,EAAEC,WAAW,QAAQ,kBAAkB;AAChE,OAAOC,GAAG,MAAM,eAAe;AAE/B,OAAO,MAAMC,UAAU,GAAGH,gBAAgB,CACxC,mBAAmB,EACnB,OAAOI,IAAI,EAAE;EAAEC,eAAe;EAAEC;AAAiB,CAAC,KAAK;EACrD,IAAI;IACF,MAAM;MAAEC;IAAK,CAAC,GAAG,MAAML,GAAG,CAACM,IAAI,CAAC,aAAa,EAAEJ,IAAI,EAAE;MACnDK,eAAe,EAAE;IACnB,CAAC,CAAC;IACF,OAAOH,gBAAgB,CAACC,IAAI,CAAC;EAC/B,CAAC,CAAC,OAAOG,KAAK,EAAE;IACd,OAAOL,eAAe,CAACK,KAAK,CAACC,QAAQ,CAACJ,IAAI,CAAC;EAC7C;AACF,CACF,CAAC;AACD;;AAEA,OAAO,MAAMK,UAAU,GAAGZ,gBAAgB,CACxC,mBAAmB,EACnB,OAAOa,SAAS,EAAE;EAAER,eAAe;EAAEC;AAAiB,CAAC,KAAK;EAC1D,IAAI;IACF,MAAM;MAAEC;IAAK,CAAC,GAAG,MAAML,GAAG,CAACY,GAAG,CAAC,eAAeD,SAAS,EAAE,EAAE;MACzDJ,eAAe,EAAE;IACnB,CAAC,CAAC;IACF,OAAOH,gBAAgB,CAACC,IAAI,CAAC;EAC/B,CAAC,CAAC,OAAOG,KAAK,EAAE;IACd,OAAOL,eAAe,CAACK,KAAK,CAACC,QAAQ,CAACJ,IAAI,CAAC;EAC7C;AACF,CACF,CAAC;AACD;;AAEA,OAAO,MAAMQ,aAAa,GAAGf,gBAAgB,CAC3C,sBAAsB,EACtB,OAAO;EAAEgB,QAAQ;EAAEZ;AAAK,CAAC,EAAE;EAAEC,eAAe;EAAEC;AAAiB,CAAC,KAAK;EACnE,IAAI;IACF,MAAM;MAAEC;IAAK,CAAC,GAAG,MAAML,GAAG,CAACe,GAAG,CAAC,kBAAkBD,QAAQ,EAAE,EAAEZ,IAAI,EAAE;MACjEK,eAAe,EAAE;IACnB,CAAC,CAAC;IACF,OAAOH,gBAAgB,CAACC,IAAI,CAAC;EAC/B,CAAC,CAAC,OAAOG,KAAK,EAAE;IACd,OAAOL,eAAe,CAACK,KAAK,CAACC,QAAQ,CAACJ,IAAI,CAAC;EAC7C;AACF,CACF,CAAC;AACD;;AAEA,OAAO,MAAMW,aAAa,GAAGjB,WAAW,CAAC;EACvCkB,IAAI,EAAE,QAAQ;EACdC,YAAY,EAAE;IACZC,cAAc,EAAE,EAAE;IAClBC,YAAY,EAAE,EAAE;IAChBC,MAAM,EAAE,KAAK;IACbC,OAAO,EAAE,EAAE;IACXC,MAAM,EAAE;EACV,CAAC;EACDC,QAAQ,EAAE;IACRC,YAAY,EAAEA,CAACC,KAAK,EAAEC,CAAC,KAAK;MAC1BD,KAAK,CAACP,cAAc,GAAG,EAAE;MACzBO,KAAK,CAACN,YAAY,GAAG,EAAE;IACzB;EACF,CAAC;EACDQ,aAAa,EAAGC,OAAO,IAAK;IAC1BA,OAAO,CACJC,OAAO,CAAC7B,UAAU,CAAC8B,OAAO,EAAE,CAACL,KAAK,EAAE;MAAEM;IAAQ,CAAC,KAAK;MACnDN,KAAK,CAACL,MAAM,GAAG,IAAI;IACrB,CAAC,CAAC,CACDS,OAAO,CAAC7B,UAAU,CAACgC,QAAQ,EAAE,CAACP,KAAK,EAAE;MAAEM;IAAQ,CAAC,KAAK;MACpDN,KAAK,CAACL,MAAM,GAAG,KAAK;MACpBK,KAAK,CAACN,YAAY,GAAGY,OAAO,CAACxB,KAAK;IACpC,CAAC,CAAC,CACDsB,OAAO,CAAC7B,UAAU,CAACiC,SAAS,EAAE,CAACR,KAAK,EAAE;MAAEM;IAAQ,CAAC,KAAK;MACrDN,KAAK,CAACL,MAAM,GAAG,KAAK;MACpBK,KAAK,CAACP,cAAc,GAAGa,OAAO,CAACG,OAAO;MACtCT,KAAK,CAACH,MAAM,GAAGS,OAAO,CAACT,MAAM;IAC/B,CAAC,CAAC,CACDO,OAAO,CAACpB,UAAU,CAACwB,SAAS,EAAE,CAACR,KAAK,EAAE;MAAEM;IAAQ,CAAC,KAAK;MACrDN,KAAK,CAACH,MAAM,GAAGS,OAAO,CAACT,MAAM;IAC/B,CAAC,CAAC,CACDO,OAAO,CAACjB,aAAa,CAACkB,OAAO,EAAE,CAACL,KAAK,EAAE;MAAEM;IAAQ,CAAC,KAAK;MACtDN,KAAK,CAACL,MAAM,GAAG,IAAI;IACrB,CAAC,CAAC,CACDS,OAAO,CAACjB,aAAa,CAACoB,QAAQ,EAAE,CAACP,KAAK,EAAE;MAAEM;IAAQ,CAAC,KAAK;MACvDN,KAAK,CAACL,MAAM,GAAG,KAAK;MACpBK,KAAK,CAACN,YAAY,GAAGY,OAAO,CAACxB,KAAK;IACpC,CAAC,CAAC,CACDsB,OAAO,CAACjB,aAAa,CAACqB,SAAS,EAAE,CAACR,KAAK,EAAE;MAAEM;IAAQ,CAAC,KAAK;MACxDN,KAAK,CAACL,MAAM,GAAG,KAAK;MACpBK,KAAK,CAACP,cAAc,GAAGa,OAAO,CAACG,OAAO;MACtCT,KAAK,CAACH,MAAM,GAAGS,OAAO,CAACT,MAAM;IAC/B,CAAC,CAAC;EACN;AACF,CAAC,CAAC;AACF,OAAO,MAAM;EAAEE;AAAa,CAAC,GAAGT,aAAa,CAACoB,OAAO;AACrD,eAAepB,aAAa,CAACqB,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}