{"ast":null,"code":"import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\nimport api from \"../../api/api\";\nexport const add_product = createAsyncThunk('product/add_product', async (product, {\n  rejectWithValue,\n  fulfillWithValue\n}) => {\n  try {\n    const {\n      data\n    } = await api.post('/product-add', product, {\n      withCredentials: true\n    });\n    // console.log(data)\n    return fulfillWithValue(data);\n  } catch (error) {\n    // console.log(error.response.data)\n    return rejectWithValue(error.response.data);\n  }\n});\n\n// End Method \n\nexport const get_products = createAsyncThunk('product/get_products', async ({\n  parPage,\n  page,\n  searchValue\n}, {\n  rejectWithValue,\n  fulfillWithValue\n}) => {\n  try {\n    const {\n      data\n    } = await api.get(`/products-get?page=${page}&&searchValue=${searchValue}&&parPage=${parPage}`, {\n      withCredentials: true\n    });\n    console.log(data);\n    return fulfillWithValue(data);\n  } catch (error) {\n    // console.log(error.response.data)\n    return rejectWithValue(error.response.data);\n  }\n});\n\n// End Method \n\nexport const get_product = createAsyncThunk('product/get_product', async (productId, {\n  rejectWithValue,\n  fulfillWithValue\n}) => {\n  try {\n    const {\n      data\n    } = await api.get(`/product-get/${productId}`, {\n      withCredentials: true\n    });\n    console.log(data);\n    return fulfillWithValue(data);\n  } catch (error) {\n    // console.log(error.response.data)\n    return rejectWithValue(error.response.data);\n  }\n});\n\n// End Method \n\nexport const product_image_update = createAsyncThunk('product/product_image_update', async ({\n  oldImage,\n  newImage,\n  productId\n}, {\n  rejectWithValue,\n  fulfillWithValue\n}) => {\n  try {\n    const formData = new FormData();\n    formData.append('oldImage', oldImage);\n    formData.append('newImage', newImage);\n    formData.append('productId', productId);\n    const {\n      data\n    } = await api.post('/product-image-update', formData, {\n      withCredentials: true\n    });\n    console.log(data);\n    return fulfillWithValue(data);\n  } catch (error) {\n    // console.log(error.response.data)\n    return rejectWithValue(error.response.data);\n  }\n});\n\n// End Method \n\nexport const update_product = createAsyncThunk('product/update_product', async (product, {\n  rejectWithValue,\n  fulfillWithValue\n}) => {\n  try {\n    const {\n      data\n    } = await api.post('/product-update', product, {\n      withCredentials: true\n    });\n    console.log(data);\n    return fulfillWithValue(data);\n  } catch (error) {\n    // console.log(error.response.data)\n    return rejectWithValue(error.response.data);\n  }\n});\n\n// End Method \n\nexport const productReducer = createSlice({\n  name: 'product',\n  initialState: {\n    successMessage: '',\n    errorMessage: '',\n    loader: false,\n    products: [],\n    product: '',\n    totalProduct: 0\n  },\n  reducers: {\n    messageClear: (state, _) => {\n      state.errorMessage = \"\";\n    }\n  },\n  extraReducers: builder => {\n    builder.addCase(add_product.pending, (state, {\n      payload\n    }) => {\n      state.loader = true;\n    }).addCase(add_product.rejected, (state, {\n      payload\n    }) => {\n      state.loader = false;\n      state.errorMessage = payload.error;\n    }).addCase(add_product.fulfilled, (state, {\n      payload\n    }) => {\n      state.loader = false;\n      state.successMessage = payload.message;\n    }).addCase(get_products.fulfilled, (state, {\n      payload\n    }) => {\n      state.totalProduct = payload.totalProduct;\n      state.products = payload.products;\n    }).addCase(get_product.fulfilled, (state, {\n      payload\n    }) => {\n      state.product = payload.product;\n    }).addCase(update_product.pending, (state, {\n      payload\n    }) => {\n      state.loader = true;\n    }).addCase(update_product.rejected, (state, {\n      payload\n    }) => {\n      state.loader = false;\n      state.errorMessage = payload.error;\n    }).addCase(update_product.fulfilled, (state, {\n      payload\n    }) => {\n      state.loader = false;\n      state.product = payload.product;\n      state.successMessage = payload.message;\n    }).addCase(product_image_update.fulfilled, (state, {\n      payload\n    }) => {\n      state.product = payload.product;\n      state.successMessage = payload.message;\n    });\n  }\n});\n// loader and message clear method\n\nexport const {\n  messageClear\n} = productReducer.actions;\nexport default productReducer.reducer;","map":{"version":3,"names":["createAsyncThunk","createSlice","api","add_product","product","rejectWithValue","fulfillWithValue","data","post","withCredentials","error","response","get_products","parPage","page","searchValue","get","console","log","get_product","productId","product_image_update","oldImage","newImage","formData","FormData","append","update_product","productReducer","name","initialState","successMessage","errorMessage","loader","products","totalProduct","reducers","messageClear","state","_","extraReducers","builder","addCase","pending","payload","rejected","fulfilled","message","actions","reducer"],"sources":["C:/Users/Admin/GR1_E-Commerce_Project/dashboard-frontend/src/store/Reducers/productReducer.js"],"sourcesContent":["import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\r\nimport api from \"../../api/api\"; \r\n\r\nexport const add_product = createAsyncThunk(\r\n    'product/add_product',\r\n    async(product,{rejectWithValue, fulfillWithValue}) => {\r\n        \r\n        try { \r\n            const {data} = await api.post('/product-add',product,{withCredentials: true}) \r\n            // console.log(data)\r\n            return fulfillWithValue(data)\r\n        } catch (error) {\r\n            // console.log(error.response.data)\r\n            return rejectWithValue(error.response.data)\r\n        }\r\n    }\r\n)\r\n\r\n// End Method \r\n\r\nexport const get_products = createAsyncThunk(\r\n    'product/get_products',\r\n    async({ parPage,page,searchValue },{rejectWithValue, fulfillWithValue}) => {\r\n        \r\n        try {\r\n             \r\n            const {data} = await api.get(`/products-get?page=${page}&&searchValue=${searchValue}&&parPage=${parPage}`,{withCredentials: true}) \r\n            console.log(data)\r\n            return fulfillWithValue(data)\r\n        } catch (error) {\r\n            // console.log(error.response.data)\r\n            return rejectWithValue(error.response.data)\r\n        }\r\n    }\r\n)\r\n\r\n  // End Method \r\n\r\n\r\n  \r\nexport const get_product = createAsyncThunk(\r\n    'product/get_product',\r\n    async( productId ,{rejectWithValue, fulfillWithValue}) => {\r\n        \r\n        try {\r\n             \r\n            const {data} = await api.get(`/product-get/${productId}`,{withCredentials: true}) \r\n            console.log(data)\r\n            return fulfillWithValue(data)\r\n        } catch (error) {\r\n            // console.log(error.response.data)\r\n            return rejectWithValue(error.response.data)\r\n        }\r\n    }\r\n)\r\n\r\n  // End Method \r\n\r\n  export const product_image_update = createAsyncThunk(\r\n    'product/product_image_update',\r\n    async( {oldImage,newImage,productId} ,{rejectWithValue, fulfillWithValue}) => {\r\n        \r\n        try {\r\n\r\n            const formData = new FormData()\r\n            formData.append('oldImage', oldImage)\r\n            formData.append('newImage', newImage)\r\n            formData.append('productId', productId)             \r\n            const {data} = await api.post('/product-image-update', formData,{withCredentials: true}) \r\n            console.log(data)\r\n            return fulfillWithValue(data)\r\n        } catch (error) {\r\n            // console.log(error.response.data)\r\n            return rejectWithValue(error.response.data)\r\n        }\r\n    }\r\n)\r\n\r\n  // End Method \r\n\r\nexport const update_product = createAsyncThunk(\r\n    'product/update_product',\r\n    async( product ,{rejectWithValue, fulfillWithValue}) => {\r\n        \r\n        try {\r\n             \r\n            const {data} = await api.post('/product-update', product,{withCredentials: true}) \r\n            console.log(data)\r\n            return fulfillWithValue(data)\r\n        } catch (error) {\r\n            // console.log(error.response.data)\r\n            return rejectWithValue(error.response.data)\r\n        }\r\n    }\r\n)\r\n\r\n  // End Method \r\n \r\nexport const productReducer = createSlice({\r\n    name: 'product',\r\n    initialState:{\r\n        successMessage :  '',\r\n        errorMessage : '',\r\n        loader: false,\r\n        products : [], \r\n        product : '',\r\n        totalProduct: 0\r\n    },\r\n    reducers : {\r\n\r\n        messageClear : (state,_) => {\r\n            state.errorMessage = \"\"\r\n        }\r\n\r\n    },\r\n    extraReducers: (builder) => {\r\n        builder\r\n        .addCase(add_product.pending, (state, { payload }) => {\r\n            state.loader = true;\r\n        })\r\n        .addCase(add_product.rejected, (state, { payload }) => {\r\n            state.loader = false;\r\n            state.errorMessage = payload.error\r\n        }) \r\n        .addCase(add_product.fulfilled, (state, { payload }) => {\r\n            state.loader = false;\r\n            state.successMessage = payload.message \r\n             \r\n        })\r\n\r\n        .addCase(get_products.fulfilled, (state, { payload }) => {\r\n            state.totalProduct = payload.totalProduct;\r\n            state.products = payload.products;\r\n             \r\n        })\r\n        .addCase(get_product.fulfilled, (state, { payload }) => {\r\n            state.product = payload.product;  \r\n        })\r\n\r\n        .addCase(update_product.pending, (state, { payload }) => {\r\n            state.loader = true;\r\n        })\r\n        .addCase(update_product.rejected, (state, { payload }) => {\r\n            state.loader = false;\r\n            state.errorMessage = payload.error\r\n        }) \r\n        .addCase(update_product.fulfilled, (state, { payload }) => {\r\n            state.loader = false;\r\n            state.product = payload.product \r\n            state.successMessage = payload.message \r\n        })\r\n        .addCase(product_image_update.fulfilled, (state, { payload }) => {\r\n            state.product = payload.product \r\n            state.successMessage = payload.message \r\n        })\r\n    }\r\n\r\n})\r\n// loader and message clear method\r\n\r\nexport const {messageClear} = productReducer.actions\r\nexport default productReducer.reducer"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}