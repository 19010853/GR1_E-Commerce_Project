{"ast":null,"code":"import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\nimport api from \"../../api/api\";\nexport const get_admin_orders = createAsyncThunk('orders/get_admin_orders', async ({\n  parPage,\n  page,\n  searchValue\n}, {\n  rejectWithValue,\n  fulfillWithValue\n}) => {\n  try {\n    const {\n      data\n    } = await api.get(`/admin/orders?page=${page}&&searchValue=${searchValue}&&parPage=${parPage}`, {\n      withCredentials: true\n    });\n    return fulfillWithValue(data);\n  } catch (error) {\n    return rejectWithValue(error.response.data);\n  }\n});\n\n// End Method  \n\nexport const get_admin_order = createAsyncThunk('orders/get_admin_order', async (orderId, {\n  rejectWithValue,\n  fulfillWithValue\n}) => {\n  try {\n    const {\n      data\n    } = await api.get(`/admin/order/${orderId}`, {\n      withCredentials: true\n    });\n    return fulfillWithValue(data);\n  } catch (error) {\n    return rejectWithValue(error.response.data);\n  }\n});\n// End Method  \n\nexport const admin_order_status_update = createAsyncThunk('orders/admin_order_status_update', async ({\n  orderId,\n  info\n}, {\n  rejectWithValue,\n  fulfillWithValue\n}) => {\n  try {\n    const {\n      data\n    } = await api.put(`/admin/order-status/update/${orderId}`, info, {\n      withCredentials: true\n    });\n    return fulfillWithValue(data);\n  } catch (error) {\n    return rejectWithValue(error.response.data);\n  }\n});\n// End Method  \n\nexport const OrderReducer = createSlice({\n  name: 'order',\n  initialState: {\n    successMessage: '',\n    errorMessage: '',\n    totalOrder: 0,\n    order: {},\n    myOrders: []\n  },\n  reducers: {\n    messageClear: (state, _) => {\n      state.errorMessage = \"\";\n      state.successMessage = \"\";\n    }\n  },\n  extraReducers: builder => {\n    builder.addCase(get_admin_orders.fulfilled, (state, {\n      payload\n    }) => {\n      state.myOrders = payload.orders;\n      state.totalOrder = payload.totalOrder;\n    }).addCase(get_admin_order.fulfilled, (state, {\n      payload\n    }) => {\n      state.order = payload.order;\n    }).addCase(admin_order_status_update.rejected, (state, {\n      payload\n    }) => {\n      state.errorMessage = payload.error;\n    }).addCase(admin_order_status_update.fulfilled, (state, {\n      payload\n    }) => {\n      state.successMessage = payload.message;\n    });\n  }\n});\nexport const {\n  messageClear\n} = OrderReducer.actions;\nexport default OrderReducer.reducer;","map":{"version":3,"names":["createAsyncThunk","createSlice","api","get_admin_orders","parPage","page","searchValue","rejectWithValue","fulfillWithValue","data","get","withCredentials","error","response","get_admin_order","orderId","admin_order_status_update","info","put","OrderReducer","name","initialState","successMessage","errorMessage","totalOrder","order","myOrders","reducers","messageClear","state","_","extraReducers","builder","addCase","fulfilled","payload","orders","rejected","message","actions","reducer"],"sources":["C:/Users/Admin/GR1_E-Commerce_Project/dashboard-frontend/src/store/Reducers/orderReducer.js"],"sourcesContent":["import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\r\nimport api from \"../../api/api\";\r\n\r\nexport const get_admin_orders = createAsyncThunk(\r\n    'orders/get_admin_orders',\r\n    async ({ parPage, page, searchValue }, { rejectWithValue, fulfillWithValue }) => {\r\n\r\n        try {\r\n\r\n            const { data } = await api.get(`/admin/orders?page=${page}&&searchValue=${searchValue}&&parPage=${parPage}`, { withCredentials: true })\r\n            return fulfillWithValue(data)\r\n        } catch (error) {\r\n            return rejectWithValue(error.response.data)\r\n        }\r\n    }\r\n)\r\n\r\n// End Method  \r\n\r\nexport const get_admin_order = createAsyncThunk(\r\n    'orders/get_admin_order',\r\n    async (orderId, { rejectWithValue, fulfillWithValue }) => {\r\n        try {\r\n            const { data } = await api.get(`/admin/order/${orderId}`, { withCredentials: true })\r\n            return fulfillWithValue(data)\r\n        } catch (error) {\r\n            return rejectWithValue(error.response.data)\r\n        }\r\n    }\r\n)\r\n// End Method  \r\n\r\nexport const admin_order_status_update = createAsyncThunk(\r\n    'orders/admin_order_status_update',\r\n    async ({ orderId, info }, { rejectWithValue, fulfillWithValue }) => {\r\n        try {\r\n            const { data } = await api.put(`/admin/order-status/update/${orderId}`, info, { withCredentials: true })\r\n            return fulfillWithValue(data)\r\n        } catch (error) {\r\n            return rejectWithValue(error.response.data)\r\n        }\r\n    }\r\n)\r\n// End Method  \r\n\r\n\r\nexport const OrderReducer = createSlice({\r\n    name: 'order',\r\n    initialState: {\r\n        successMessage: '',\r\n        errorMessage: '',\r\n        totalOrder: 0,\r\n        order: {},\r\n        myOrders: []\r\n    },\r\n    reducers: {\r\n\r\n        messageClear: (state, _) => {\r\n            state.errorMessage = \"\"\r\n            state.successMessage = \"\"\r\n        }\r\n\r\n    },\r\n    extraReducers: (builder) => {\r\n        builder\r\n            .addCase(get_admin_orders.fulfilled, (state, { payload }) => {\r\n                state.myOrders = payload.orders;\r\n                state.totalOrder = payload.totalOrder;\r\n            })\r\n            .addCase(get_admin_order.fulfilled, (state, { payload }) => {\r\n                state.order = payload.order;\r\n            })\r\n            .addCase(admin_order_status_update.rejected, (state, { payload }) => {\r\n                state.errorMessage = payload.error;\r\n            })\r\n            .addCase(admin_order_status_update.fulfilled, (state, { payload }) => {\r\n                state.successMessage = payload.message;\r\n            })\r\n\r\n\r\n\r\n    }\r\n\r\n})\r\nexport const { messageClear } = OrderReducer.actions\r\nexport default OrderReducer.reducer"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}