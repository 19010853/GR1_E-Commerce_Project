{"ast":null,"code":"import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\nimport api from \"../../api/api\";\nexport const add_product = createAsyncThunk('product/add_product', async (product, {\n  rejectWithValue,\n  fulfillWithValue\n}) => {\n  try {\n    const {\n      data\n    } = await api.post('/product-add', product, {\n      withCredentials: true\n    });\n    // console.log(data)\n    return fulfillWithValue(data);\n  } catch (error) {\n    // console.log(error.response.data)\n    return rejectWithValue(error.response.data);\n  }\n});\n\n// End Method \n\nexport const get_products = createAsyncThunk('product/get_products', async ({\n  parPage,\n  page,\n  searchValue\n}, {\n  rejectWithValue,\n  fulfillWithValue\n}) => {\n  try {\n    const {\n      data\n    } = await api.get(`/products-get?page=${page}&&searchValue=${searchValue}&&parPage=${parPage}`, {\n      withCredentials: true\n    });\n    console.log(data);\n    return fulfillWithValue(data);\n  } catch (error) {\n    // console.log(error.response.data)\n    return rejectWithValue(error.response.data);\n  }\n});\n\n// End Method \n\nexport const get_product = createAsyncThunk('product/get_product', async (productId, {\n  rejectWithValue,\n  fulfillWithValue\n}) => {\n  try {\n    const {\n      data\n    } = await api.get(`/product-get/${productId}`, {\n      withCredentials: true\n    });\n    console.log(data);\n    return fulfillWithValue(data);\n  } catch (error) {\n    // console.log(error.response.data)\n    return rejectWithValue(error.response.data);\n  }\n});\n\n// End Method \n\nexport const product_image_update = createAsyncThunk('product/product_image_update', async ({\n  oldImage,\n  newImage,\n  productId\n}, {\n  rejectWithValue,\n  fulfillWithValue\n}) => {\n  try {\n    const formData = new FormData();\n    formData.append('oldImage', oldImage);\n    formData.append('newImage', newImage);\n    formData.append('productId', productId);\n    const {\n      data\n    } = await api.post('/product-image-update', formData, {\n      withCredentials: true\n    });\n    console.log(data);\n    return fulfillWithValue(data);\n  } catch (error) {\n    // console.log(error.response.data)\n    return rejectWithValue(error.response.data);\n  }\n});\n\n// End Method \n\nexport const update_product = createAsyncThunk('product/update_product', async (product, {\n  rejectWithValue,\n  fulfillWithValue\n}) => {\n  try {\n    const {\n      data\n    } = await api.post('/product-update', product, {\n      withCredentials: true\n    });\n    console.log(data);\n    return fulfillWithValue(data);\n  } catch (error) {\n    // console.log(error.response.data)\n    return rejectWithValue(error.response.data);\n  }\n});\n\n// End Method \n\nexport const remove_product_image = createAsyncThunk('product/remove_product_image', async ({\n  productId,\n  imageUrl\n}, {\n  rejectWithValue,\n  fulfillWithValue\n}) => {\n  try {\n    const {\n      data\n    } = await api.post('/product-remove-image', {\n      productId,\n      imageUrl\n    }, {\n      withCredentials: true\n    });\n    return fulfillWithValue(data);\n  } catch (error) {\n    return rejectWithValue(error.response.data);\n  }\n});\nexport const productReducer = createSlice({\n  name: 'product',\n  initialState: {\n    successMessage: '',\n    errorMessage: '',\n    loader: false,\n    products: [],\n    product: '',\n    totalProduct: 0\n  },\n  reducers: {\n    messageClear: (state, _) => {\n      state.errorMessage = \"\";\n    }\n  },\n  extraReducers: builder => {\n    builder.addCase(add_product.pending, (state, {\n      payload\n    }) => {\n      state.loader = true;\n    }).addCase(add_product.rejected, (state, {\n      payload\n    }) => {\n      state.loader = false;\n      state.errorMessage = payload.error === \"Product name already exists\" ? \"Tên sản phẩm đã tồn tại\" : payload.error === \"Invalid product data\" ? \"Dữ liệu sản phẩm không hợp lệ\" : payload.error;\n    }).addCase(add_product.fulfilled, (state, {\n      payload\n    }) => {\n      state.loader = false;\n      state.successMessage = payload.message === \"Product added successfully\" ? \"Đã thêm sản phẩm thành công\" : payload.message;\n    }).addCase(get_products.fulfilled, (state, {\n      payload\n    }) => {\n      state.totalProduct = payload.totalProduct;\n      state.products = payload.products;\n    }).addCase(get_product.fulfilled, (state, {\n      payload\n    }) => {\n      state.product = payload.product;\n    }).addCase(update_product.pending, (state, {\n      payload\n    }) => {\n      state.loader = true;\n    }).addCase(update_product.rejected, (state, {\n      payload\n    }) => {\n      state.loader = false;\n      state.errorMessage = payload.error === \"Product not found\" ? \"Không tìm thấy sản phẩm\" : payload.error === \"Invalid product data\" ? \"Dữ liệu sản phẩm không hợp lệ\" : payload.error;\n    }).addCase(update_product.fulfilled, (state, {\n      payload\n    }) => {\n      state.loader = false;\n      state.product = payload.product;\n      state.successMessage = payload.message === \"Product updated successfully\" ? \"Đã cập nhật sản phẩm thành công\" : payload.message;\n    }).addCase(product_image_update.fulfilled, (state, {\n      payload\n    }) => {\n      state.product = payload.product;\n      state.successMessage = payload.message === \"Product image updated successfully\" ? \"Đã cập nhật hình ảnh sản phẩm thành công\" : payload.message;\n    }).addCase(remove_product_image.fulfilled, (state, {\n      payload\n    }) => {\n      state.product = payload.product;\n      state.successMessage = payload.message;\n    });\n  }\n});\n// loader and message clear method\n\nexport const {\n  messageClear\n} = productReducer.actions;\nexport default productReducer.reducer;","map":{"version":3,"names":["createAsyncThunk","createSlice","api","add_product","product","rejectWithValue","fulfillWithValue","data","post","withCredentials","error","response","get_products","parPage","page","searchValue","get","console","log","get_product","productId","product_image_update","oldImage","newImage","formData","FormData","append","update_product","remove_product_image","imageUrl","productReducer","name","initialState","successMessage","errorMessage","loader","products","totalProduct","reducers","messageClear","state","_","extraReducers","builder","addCase","pending","payload","rejected","fulfilled","message","actions","reducer"],"sources":["C:/Users/Admin/GR1_E-Commerce_Project/dashboard-frontend/src/store/Reducers/productReducer.js"],"sourcesContent":["import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\nimport api from \"../../api/api\";\n\nexport const add_product = createAsyncThunk(\n    'product/add_product',\n    async (product, { rejectWithValue, fulfillWithValue }) => {\n\n        try {\n            const { data } = await api.post('/product-add', product, { withCredentials: true })\n            // console.log(data)\n            return fulfillWithValue(data)\n        } catch (error) {\n            // console.log(error.response.data)\n            return rejectWithValue(error.response.data)\n        }\n    }\n)\n\n// End Method \n\nexport const get_products = createAsyncThunk(\n    'product/get_products',\n    async ({ parPage, page, searchValue }, { rejectWithValue, fulfillWithValue }) => {\n\n        try {\n\n            const { data } = await api.get(`/products-get?page=${page}&&searchValue=${searchValue}&&parPage=${parPage}`, { withCredentials: true })\n            console.log(data)\n            return fulfillWithValue(data)\n        } catch (error) {\n            // console.log(error.response.data)\n            return rejectWithValue(error.response.data)\n        }\n    }\n)\n\n// End Method \n\n\n\nexport const get_product = createAsyncThunk(\n    'product/get_product',\n    async (productId, { rejectWithValue, fulfillWithValue }) => {\n\n        try {\n\n            const { data } = await api.get(`/product-get/${productId}`, { withCredentials: true })\n            console.log(data)\n            return fulfillWithValue(data)\n        } catch (error) {\n            // console.log(error.response.data)\n            return rejectWithValue(error.response.data)\n        }\n    }\n)\n\n// End Method \n\nexport const product_image_update = createAsyncThunk(\n    'product/product_image_update',\n    async ({ oldImage, newImage, productId }, { rejectWithValue, fulfillWithValue }) => {\n\n        try {\n\n            const formData = new FormData()\n            formData.append('oldImage', oldImage)\n            formData.append('newImage', newImage)\n            formData.append('productId', productId)\n            const { data } = await api.post('/product-image-update', formData, { withCredentials: true })\n            console.log(data)\n            return fulfillWithValue(data)\n        } catch (error) {\n            // console.log(error.response.data)\n            return rejectWithValue(error.response.data)\n        }\n    }\n)\n\n// End Method \n\nexport const update_product = createAsyncThunk(\n    'product/update_product',\n    async (product, { rejectWithValue, fulfillWithValue }) => {\n\n        try {\n\n            const { data } = await api.post('/product-update', product, { withCredentials: true })\n            console.log(data)\n            return fulfillWithValue(data)\n        } catch (error) {\n            // console.log(error.response.data)\n            return rejectWithValue(error.response.data)\n        }\n    }\n)\n\n// End Method \n\nexport const remove_product_image = createAsyncThunk(\n    'product/remove_product_image',\n    async ({ productId, imageUrl }, { rejectWithValue, fulfillWithValue }) => {\n        try {\n            const { data } = await api.post('/product-remove-image', { productId, imageUrl }, { withCredentials: true });\n            return fulfillWithValue(data);\n        } catch (error) {\n            return rejectWithValue(error.response.data);\n        }\n    }\n)\n\nexport const productReducer = createSlice({\n    name: 'product',\n    initialState: {\n        successMessage: '',\n        errorMessage: '',\n        loader: false,\n        products: [],\n        product: '',\n        totalProduct: 0\n    },\n    reducers: {\n\n        messageClear: (state, _) => {\n            state.errorMessage = \"\"\n        }\n\n    },\n    extraReducers: (builder) => {\n        builder\n            .addCase(add_product.pending, (state, { payload }) => {\n                state.loader = true;\n            })\n            .addCase(add_product.rejected, (state, { payload }) => {\n                state.loader = false;\n                state.errorMessage = payload.error === \"Product name already exists\" ? \"Tên sản phẩm đã tồn tại\" :\n                    payload.error === \"Invalid product data\" ? \"Dữ liệu sản phẩm không hợp lệ\" :\n                        payload.error;\n            })\n            .addCase(add_product.fulfilled, (state, { payload }) => {\n                state.loader = false;\n                state.successMessage = payload.message === \"Product added successfully\" ? \"Đã thêm sản phẩm thành công\" : payload.message;\n            })\n\n            .addCase(get_products.fulfilled, (state, { payload }) => {\n                state.totalProduct = payload.totalProduct;\n                state.products = payload.products;\n\n            })\n            .addCase(get_product.fulfilled, (state, { payload }) => {\n                state.product = payload.product;\n            })\n\n            .addCase(update_product.pending, (state, { payload }) => {\n                state.loader = true;\n            })\n            .addCase(update_product.rejected, (state, { payload }) => {\n                state.loader = false;\n                state.errorMessage = payload.error === \"Product not found\" ? \"Không tìm thấy sản phẩm\" :\n                    payload.error === \"Invalid product data\" ? \"Dữ liệu sản phẩm không hợp lệ\" :\n                        payload.error;\n            })\n            .addCase(update_product.fulfilled, (state, { payload }) => {\n                state.loader = false;\n                state.product = payload.product;\n                state.successMessage = payload.message === \"Product updated successfully\" ? \"Đã cập nhật sản phẩm thành công\" : payload.message;\n            })\n            .addCase(product_image_update.fulfilled, (state, { payload }) => {\n                state.product = payload.product;\n                state.successMessage = payload.message === \"Product image updated successfully\" ? \"Đã cập nhật hình ảnh sản phẩm thành công\" : payload.message;\n            })\n            .addCase(remove_product_image.fulfilled, (state, { payload }) => {\n                state.product = payload.product;\n                state.successMessage = payload.message;\n            })\n    }\n\n})\n// loader and message clear method\n\nexport const { messageClear } = productReducer.actions\nexport default productReducer.reducer"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}